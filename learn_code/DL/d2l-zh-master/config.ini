[project]

name = d2l-zh

title = 动手学深度学习

author = Aston Zhang, Zachary C. Lipton, Mu Li, and Alexander J. Smola

copyright = 2021, All authors. Licensed under CC-BY-SA-4.0 and MIT-0.

release = 2.0.0-alpha2

lang = zh

[translation]

origin_repo = d2l-ai/d2l-en
origin_lang = en
translator = aws

[build]

# A list of wildcards to indicate the markdown files that need to be evaluated as
# Jupyter notebooks.
notebooks = *.md */*.md

# A list of files that will be copied to the build folder.
resources = img/ d2lzh/ d2l.bib setup.py

# Files that will be skipped.
exclusions = */*_origin.md README.md STYLE_GUIDE.md INFO.md CODE_OF_CONDUCT.md CONTRIBUTING.md contrib/*md

# If True (default), then will evaluate the notebook to obtain outputs.
eval_notebook = True

tabs = mxnet, pytorch, tensorflow

sphinx_configs = numfig_format = {'figure': '图%%s', 'table': '表%%s', 'code-block': '列表%%s', 'section': '%%s节'}
    latex_elements = {
    'utf8extra' : '',
    'inputenc'  : '',
    'babel'     : r'''\usepackage[english]{babel}''',
    'preamble' : r'''
                \usepackage{ctex}
                \setmainfont{Source Serif Pro}
                \setsansfont{Source Sans Pro}
                \setmonofont{Source Code Pro}
                \setCJKmainfont[BoldFont=Source Han Serif SC SemiBold]{Source Han Serif SC}
                \setCJKsansfont[BoldFont=Source Han Sans SC Medium]{Source Han Sans SC Normal}
                \setCJKmonofont{Source Han Sans SC Normal}
                \addto\captionsenglish{\renewcommand{\chaptername}{}}
                \addto\captionsenglish{\renewcommand{\contentsname}{目录}}
                \usepackage[draft]{minted}
                \fvset{breaklines=true, breakanywhere=true}
                \setlength{\headheight}{13.6pt}
                \makeatletter
                    \fancypagestyle{normal}{
                        \fancyhf{}
                        \fancyfoot[LE,RO]{{\py@HeaderFamily\thepage}}
                        \fancyfoot[LO]{{\py@HeaderFamily\nouppercase{\rightmark}}}
                        \fancyfoot[RE]{{\py@HeaderFamily\nouppercase{\leftmark}}}
                        \fancyhead[LE,RO]{{\py@HeaderFamily }}
                     }
                \makeatother
                \CJKsetecglue{}
                \usepackage{zhnumber}
                ''',
    # The font size ('10pt', '11pt' or '12pt').
    'pointsize': '10pt',
    # Latex figure (float) alignment
    'figure_align': 'H',
    'fncychap': '\\usepackage[Sonny]{fncychap}',
    }



[html]

# A list of links that is displayed on the navbar. A link consists of three
# items: name, URL, and a fontawesome icon
# (https://fontawesome.com/icons?d=gallery). Items are separated by commas.
# PDF, http://numpy.d2l.ai/d2l-en.pdf, fas fa-file-pdf,
header_links = MXNet, https://zh-v2.d2l.ai/d2l-zh.pdf, fas fa-file-pdf,
               PyTorch, https://zh-v2.d2l.ai/d2l-zh-pytorch.pdf, fas fa-file-pdf,
               Jupyter 记事本, https://zh-v2.d2l.ai/d2l-zh.zip, fas fa-download,
               课程, https://courses.d2l.ai/zh-v2/, fas fa-user-graduate,
               GitHub, https://github.com/d2l-ai/d2l-zh, fab fa-github,
               English, https://d2l.ai, fas fa-external-link-alt

favicon = static/favicon.png

html_logo = static/logo-with-text.png


[pdf]

# The file used to post-process the generated tex file.
post_latex = ./static/post_latex/main.py

latex_logo = static/logo.png


[library]

version_file = d2l/__init__.py

[library-mxnet]

lib_file = d2l/mxnet.py
lib_name = np

# Map from d2l.xx to np.xx
simple_alias = ones, zeros, arange, meshgrid, sin, sinh, cos, cosh, tanh,
               linspace, exp, log, tensor -> array, normal -> random.normal,
               randn -> random.randn,
               rand -> random.rand, matmul -> dot, int32, float32,
               concat -> concatenate, stack, abs, eye

# Map from d2l.xx(a, *args, **kwargs) to a.xx(*args, **kwargs)
fluent_alias = numpy -> asnumpy, reshape, to -> as_in_context, reduce_sum -> sum,
               argmax, astype, reduce_mean -> mean,

alias =
       size = lambda a: a.size
       transpose = lambda a: a.T
       nn_Module = nn.Block

reverse_alias =
       d2l.size\(([\w\_\d]+)\) -> \1.size
       d2l.transpose\(([\w\_\d]+)\) -> \1.T
       d2l.nn_Module -> nn.Block

[library-pytorch]


lib_file = d2l/torch.py
lib_name = torch

simple_alias = ones, zeros, tensor, arange, meshgrid, sin, sinh, cos, cosh,
               tanh, linspace, exp, log, normal, rand, randn, matmul, int32, float32,
               concat -> cat, stack, abs, eye

fluent_alias = numpy -> detach().numpy, size -> numel, reshape, to,
               reduce_sum -> sum, argmax, astype -> type, transpose -> t,
               reduce_mean -> mean
alias =
       nn_Module = nn.Module

reverse_alias =
       d2l.nn_Module -> nn.Module

[library-tensorflow]

lib_file = d2l/tensorflow.py
lib_name = tf

simple_alias = reshape, ones, zeros, meshgrid, sin, sinh, cos, cosh, tanh,
               linspace, exp, normal -> random.normal, rand -> random.uniform,
               matmul, reduce_sum, reduce_mean, argmax, tensor -> constant,
               arange -> range, astype -> cast, int32, float32, transpose,
               concat, stack, abs, eye, log -> math.log

fluent_alias = numpy,

alias =
       size = lambda a: tf.size(a).numpy()

reverse_alias =
       d2l.size\(([\w\_\d]+)\) -> tf.size(\1).numpy()
       d2l.nn_Module -> tf.keras.Model


[deploy]

other_file_s3urls = s3://d2l-webdata/releases/d2l-zh/d2l-zh-1.0.zip
                    s3://d2l-webdata/releases/d2l-zh/d2l-zh-1.1.zip
                    s3://d2l-webdata/releases/d2l-zh/d2l-zh-2.0.0.zip

google_analytics_tracking_id = UA-96378503-2

[colab]

github_repo = mxnet, d2l-ai/d2l-zh-colab
              pytorch, d2l-ai/d2l-zh-pytorch-colab
              tensorflow, d2l-ai/d2l-zh-tensorflow-colab

replace_svg_url = img, http://d2l.ai/_images

libs = mxnet, mxnet, -U mxnet-cu101==1.7.0
       mxnet, d2l, git+https://github.com/d2l-ai/d2l-zh@release  # installing d2l
       pytorch, d2l, git+https://github.com/d2l-ai/d2l-zh@release  # installing d2l
       tensorflow, d2l, git+https://github.com/d2l-ai/d2l-zh@release  # installing d2l


[sagemaker]

github_repo = mxnet, d2l-ai/d2l-zh-sagemaker
              pytorch, d2l-ai/d2l-zh-pytorch-sagemaker
              tensorflow, d2l-ai/d2l-zh-tensorflow-sagemaker

kernel = mxnet, conda_mxnet_p36
         pytorch, conda_pytorch_p36
         tensorflow, conda_tensorflow_p36

libs = mxnet, mxnet, -U mxnet-cu101==1.7.0
       mxnet, d2l, ..  # installing d2l
       pytorch, d2l, .. # installing d2l
       tensorflow, d2l, .. # installing d2l


[slides]

top_right = <img height=80px src='http://d2l.ai/_static/logo-with-text.png'/>

github_repo = pytorch, d2l-ai/d2l-zh-pytorch-slides
